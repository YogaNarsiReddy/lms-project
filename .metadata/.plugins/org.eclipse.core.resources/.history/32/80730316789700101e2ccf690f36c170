package com.klef.sdp.service;


import com.klef.sdp.entity.Assignment;
import com.klef.sdp.entity.Course;
import com.klef.sdp.entity.User;
import com.klef.sdp.repository.AssignmentRepository;
import com.klef.sdp.repository.CourseRepository;
import com.klef.sdp.repository.UserRepository;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class AssignmentService {

    @Autowired
    private AssignmentRepository assignmentRepository;

    @Autowired
    private CourseRepository courseRepository;

    @Autowired
    private UserRepository userRepository;

    public Assignment createAssignment(Long courseId, @Valid Assignment assignment, Authentication authentication) {
        Course course = courseRepository.findById(courseId)
            .orElseThrow(() -> new IllegalArgumentException("Course not found"));
        User instructor = userRepository.findByUsername(authentication.getName())
            .orElseThrow(() -> new IllegalArgumentException("Instructor not found"));
        if (!course.getInstructor().getId().equals(instructor.getId())) {
            throw new SecurityException("Unauthorized to create assignment for this course");
        }
        assignment.setCourse(course);
        return assignmentRepository.save(assignment);
    }

    public List<Assignment> getAssignmentsByCourse(Long courseId) {
        Course course = courseRepository.findById(courseId)
            .orElseThrow(() -> new IllegalArgumentException("Course not found"));
        return assignmentRepository.findByCourse(course);
    }
}